# Creates a simple region with some data.
r = Region()
r.a = {}

# Create a new cown to share region r.
# The `move` keyword closes the region thereby releasing the cown.
cown = Cown(move r)

# Create a new object and point it to the cown.
global = {}
global.cown = move cown

# This function shows the transitive closure of mutable state
# reachable from the given variable. Notice that the cown is
# reachable but not mutable since it's released.
mermaid_show_tainted(global)

# Freeze `global` to share it with other states and regions.
# Notice that the cown and its transitive closure wasn't frozen
freeze(global)

# Test for tainting immutable objects
mermaid_show_tainted(global)
